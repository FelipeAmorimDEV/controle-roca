// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Fazenda {
  id             String           @id @default(uuid())
  nome           String           @unique
  Qrcodes        Qrcodes[]
  Pallets        Pallets[]
  Variedade      Variedade[]
  Caixa          Caixa[]
  Users          Users[]
  Product        Product[]
  Saida          Saida[]
  Entrada        Entrada[]
  Setor          Setor[]
  Aplicacao      Aplicacao[]
  Fornecedor     Fornecedor[]
  Tipo           Tipo[]
  Colheita       Colheita[]
  Funcionario    Funcionario[]
  Atividade      Atividade[]
  Apontamento    Apontamento[]
  NotaFiscal     NotaFiscal[]
  Fertirrigacao  Fertirrigacao[]
  FolhaPagamento FolhaPagamento[]
  PrecoVenda     PrecoVenda[]

  @@map("fazendas")
}

model NotaFiscal {
  id               String        @id @default(uuid())
  dataNota         DateTime
  produtos         ProdutoNota[]
  dataPagamento    DateTime?
  codigo_de_barras String?
  codigo_da_nota   String?
  statusPagamento  String        @default("pendente") // 'pendente' ou 'pago'
  fornecedor       Fornecedor    @relation(fields: [fornecedor_id], references: [id])
  fazenda          Fazenda       @relation(fields: [fazenda_id], references: [id])
  fazenda_id       String
  fornecedor_id    String

  @@map("notas_fiscais")
}

model ProdutoNota {
  id           String     @id @default(uuid())
  quantidade   Float
  valor        Float
  notaFiscal   NotaFiscal @relation(fields: [notaFiscalId], references: [id], onDelete: Cascade)
  notaFiscalId String
  produto      Product    @relation(fields: [productId], references: [id])
  productId    String
  entrada      Entrada    @relation(fields: [entradaId], references: [id], onDelete: Cascade)
  entradaId    String

  @@map("produtos_notas_fiscais")
}

model Qrcodes {
  id            String       @id @default(uuid())
  usado         Boolean      @default(false)
  createdAt     DateTime     @default(now())
  validated_at  DateTime?
  Funcionario   Funcionario? @relation(fields: [funcionarioId], references: [id])
  funcionarioId String

  pallets    Pallets? @relation(fields: [palletsId], references: [id])
  palletsId  String?
  fazenda    Fazenda  @relation(fields: [fazenda_id], references: [id])
  fazenda_id String

  @@map("qrcodes")
}

model Pallets {
  id           String     @id @default(uuid())
  usado        Boolean    @default(false)
  createdAt    DateTime   @default(now())
  peso         Int
  qtdCaixas    Int
  qtdFeitas    Int        @default(0)
  finalizado   Boolean    @default(false)
  validated_at DateTime?
  Caixa        Caixa?     @relation(fields: [caixaId], references: [id])
  caixaId      Int
  Variedade    Variedade? @relation(fields: [variedadeId], references: [id])
  variedadeId  Int
  setor        Setor      @relation(fields: [setor_id], references: [id])
  setor_id     String
  Qrcodes      Qrcodes[]
  fazenda      Fazenda    @relation(fields: [fazenda_id], references: [id])
  fazenda_id   String

  @@map("pallets")
}

model Variedade {
  id         Int       @id @default(autoincrement())
  nome       String
  fazenda    Fazenda   @relation(fields: [fazenda_id], references: [id])
  fazenda_id String
  Pallets    Pallets[]
  Setor      Setor[]

  @@map("variedades")
}

model Caixa {
  id         Int        @id @default(autoincrement())
  nome       String
  fazenda    Fazenda    @relation(fields: [fazenda_id], references: [id])
  fazenda_id String
  Pallets    Pallets[]
  Colheita   Colheita[]

  @@map("caixas")
}

model PrecoVenda {
  id            String     @id @default(uuid())
  classificacao String
  preco         Decimal
  dataInicio    DateTime
  dataFim       DateTime
  colheitas     Colheita[]
  fazenda       Fazenda    @relation(fields: [fazenda_id], references: [id])
  fazenda_id    String

  @@map("precos_venda")
}

model Users {
  id           String    @id @default(uuid())
  user         String    @unique
  password     String
  fazenda      Fazenda   @relation(fields: [fazenda_id], references: [id])
  fazenda_id   String
  fazenda_nome String    @default("Fazenda Nicole")
  Entrada      Entrada[]
  Saida        Saida[]

  @@map("users")
}

model Product {
  id                   String                 @id @default(uuid())
  name                 String
  unit                 String
  price                Float                  @default(0)
  quantity             Float?                 @default(0)
  saida                Saida[]
  entrada              Entrada[]
  Tipo                 Tipo?                  @relation(fields: [tipoId], references: [id])
  tipoId               String
  fazenda              Fazenda                @relation(fields: [fazenda_id], references: [id])
  fazenda_id           String
  ProdutoNota          ProdutoNota[]
  Fornecedor           Fornecedor?            @relation(fields: [fornecedorId], references: [id])
  fornecedorId         String?
  ProdutoFertirrigacao ProdutoFertirrigacao[]

  @@map("products")
}

model Saida {
  id          String     @id @default(uuid())
  quantity    Float
  createdAt   DateTime   @default(now())
  priceSaida  Float
  Product     Product    @relation(fields: [productId], references: [id])
  productId   String
  setor       Setor?     @relation(fields: [setorId], references: [id])
  setorId     String?
  Users       Users      @relation(fields: [usersId], references: [id])
  usersId     String
  fazenda     Fazenda    @relation(fields: [fazenda_id], references: [id])
  fazenda_id  String
  Aplicacao   Aplicacao? @relation(fields: [aplicacaoId], references: [id], onDelete: Cascade)
  aplicacaoId String?

  @@map("saidas")
}

model Entrada {
  id           String        @id @default(uuid())
  quantity     Float
  priceEntrada Float         @default(0)
  price        Float         @default(0)
  createdAt    DateTime
  Product      Product       @relation(fields: [productId], references: [id])
  productId    String
  Users        Users         @relation(fields: [usersId], references: [id])
  usersId      String
  fazenda      Fazenda       @relation(fields: [fazenda_id], references: [id])
  fazenda_id   String
  ProdutoNota  ProdutoNota[]

  @@map("entradas")
}

model Setor {
  id            String          @id @default(uuid())
  setorName     String
  variedade     Variedade       @relation(fields: [variedade_id], references: [id])
  filas         String
  tamanhoArea   Float
  Saida         Saida[]
  Aplicacao     Aplicacao[]
  Colheita      Colheita[]
  Apontamento   Apontamento[]
  Pallets       Pallets[]
  variedade_id  Int
  fazenda       Fazenda         @relation(fields: [fazenda_id], references: [id])
  fazenda_id    String
  Fertirrigacao Fertirrigacao[]

  @@map("setores")
}

model Aplicacao {
  id                String   @id @default(uuid())
  aplicador         String
  volumeCalda       Int
  createdAt         DateTime @default(now())
  produtosAplicados Json
  setor             Setor?   @relation(fields: [setorId], references: [id])
  setorId           String?
  fazenda           Fazenda  @relation(fields: [fazenda_id], references: [id])
  fazenda_id        String
  saidas            Saida[]

  @@map("aplicacoes")
}

model Fertirrigacao {
  id           String                 @id @default(uuid())
  created_at   DateTime               @default(now())
  finalized_at DateTime?
  semana       String
  funcionario  Funcionario            @relation(fields: [aplicador_id], references: [id])
  aplicador_id String
  produtos     ProdutoFertirrigacao[]
  setor        Setor                  @relation(fields: [setor_id], references: [id])
  setor_id     String
  fazenda      Fazenda                @relation(fields: [fazenda_id], references: [id])
  fazenda_id   String

  @@map("fertirrigacoes")
}

model ProdutoFertirrigacao {
  id              String         @id @default(uuid())
  produto         Product        @relation(fields: [produto_id], references: [id], onDelete: Cascade)
  produto_id      String
  quantidade      Float
  Fertirrigacao   Fertirrigacao? @relation(fields: [fertirrigacaoId], references: [id])
  fertirrigacaoId String?
}

model Tratorista {
  id   String @id @default(uuid())
  name String

  @@map("tratoristas")
}

model Fornecedor {
  id         String       @id @default(uuid())
  name       String
  Product    Product[]
  fazenda    Fazenda      @relation(fields: [fazenda_id], references: [id])
  fazenda_id String
  NotaFiscal NotaFiscal[]

  @@map("fornecedores")
}

model Tipo {
  id         String    @id @default(uuid())
  name       String
  Product    Product[]
  fazenda    Fazenda   @relation(fields: [fazenda_id], references: [id])
  fazenda_id String

  @@map("tipos")
}

model Colheita {
  id             String      @id @default(uuid())
  pesoCaixa      Int
  pesoTotal      Int
  qntCaixa       Int
  tipoCaixa      Caixa       @relation(fields: [caixa_id], references: [id])
  createdAt      DateTime    @default(now())
  variedade      String
  setor          Setor?      @relation(fields: [setorId], references: [id])
  setorId        String?
  caixa_id       Int         @default(1)
  fazenda        Fazenda     @relation(fields: [fazenda_id], references: [id])
  fazenda_id     String
  preco_venda    PrecoVenda? @relation(fields: [preco_venda_id], references: [id])
  preco_venda_id String?

  @@map("colheitas")
}

model Funcionario {
  id               String           @id @default(uuid())
  nome             String           @unique
  cargo            String           @default("teste")
  tipo_contratacao String           @default("fichado")
  Qrcodes          Qrcodes[]
  Apontamento      Apontamento[]
  fazenda          Fazenda          @relation(fields: [fazenda_id], references: [id])
  fazenda_id       String
  Fertirrigacao    Fertirrigacao[]
  FolhaPagamento   FolhaPagamento[]

  @@map("funcionarios")
}

model Atividade {
  id          String        @id @default(uuid())
  nome        String
  categoria   String
  Apontamento Apontamento[]
  fazenda     Fazenda       @relation(fields: [fazenda_id], references: [id])
  fazenda_id  String

  @@map("atividades")
}

model Apontamento {
  id             String      @id @default(uuid())
  data_inicio    DateTime    @default(now())
  data_fim       DateTime?
  status         String      @default("em andamento")
  meta           Int?
  qtd_tarefa     Int?
  custo_tarefa   Float?
  valor_bonus    Float       @default(0)
  funcionario    Funcionario @relation(fields: [funcionario_id], references: [id])
  funcionario_id String
  atividade      Atividade   @relation(fields: [atividade_id], references: [id])
  atividade_id   String
  setor          Setor       @relation(fields: [setor_id], references: [id])
  setor_id       String
  fazenda        Fazenda     @relation(fields: [fazenda_id], references: [id])
  fazenda_id     String

  @@map("apontamentos")
}

model FolhaPagamento {
  id                    String      @id @default(uuid())
  mesReferencia         DateTime
  funcionario           Funcionario @relation(fields: [funcionario_id], references: [id])
  funcionario_id        String
  totalDiasTrabalhados  Int         @default(0)
  totalHorasTrabalhadas Float       @default(0)
  custo_total           Float       @default(0)
  fazenda               Fazenda     @relation(fields: [fazenda_id], references: [id])
  fazenda_id            String

  @@unique([funcionario_id, mesReferencia])
  @@map("folhas_pagamento")
}
